name: Dev env infra
 
on: [push, pull_request]

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      tf_actions_working_dir: env/dev
    
    defaults:
       run: 
         shell: bash
         working-directory: ./env/dev

    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        id: init
        run: terraform  init 

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -var-file="dev.tfvars" -out=tfplan

      - name: add-plan-comment
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
                <details><summary>Show Plan</summary>
            
                 \`\`\`${process.env.PLAN}\`\`\`
            
                 </details>
            
               *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                })


            
      - name: Upload Terraform plan artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with: 
          name: terraform-plan-dev
          path: env/dev/tfplan
          retention-days: 1
          if-no-files-found: ignore
